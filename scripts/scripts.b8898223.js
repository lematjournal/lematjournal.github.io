"use strict";angular.module("lematClient",["ngCookies","ngResource","ngRoute","ngSanitize","ngTouch","ui.bootstrap","ngAside","duScroll","angular.filter","wysiwyg.module","ng.deviceDetector","angularUtils.directives.dirPagination","angularUtils.directives.dirDisqus","validation.match","ui.bootstrap","angucomplete-alt","ngTagsInput","flow","bootstrapColumnsSameHeight","socialLinks","akoenig.deckgrid"]).value("duScrollDuration",2e3).value("duScrollOffset",30).config(["flowFactoryProvider","$routeProvider","$locationProvider",function(a,b,c){a.defaults={target:"",permanentErrors:[404,500,501],maxChunkRetries:1,chunkRetryInterval:5e3,simultaneousUploads:4,singleFile:!0},a.on("catchAll",function(){console.log("catchAll",arguments)}),c.html5Mode(!1).hashPrefix("!")}]),angular.module("lematClient").config(["$routeProvider",function(a){a.when("/admin",{templateUrl:"views/admin/control-panel.html",resolve:{permission:["SecFactory",function(a){return a.setPermission("admin"),a.getPermission()}]}}).when("/admin/entries",{templateUrl:"views/admin/entry-admin.html",controller:"EntryController",resolve:{permission:["SecFactory",function(a){return a.setPermission("admin"),a.getPermission()}]}}).when("/admin/entries/create",{templateUrl:"views/admin/forms/entry-create.html",controller:"EntryController",resolve:{permission:["SecFactory",function(a){return a.setPermission("editor"),a.getPermission()}]}}).when("/admin/entries/:entry/edit",{templateUrl:"views/admin/forms/entry-edit.html",controller:"EntryController",resolve:{permission:["SecFactory",function(a){return a.setPermission("admin"),a.getPermission()}]}}).when("/admin/issues",{templateUrl:"views/admin/issue-admin.html",controller:"IssueController",resolve:{permission:["SecFactory",function(a){return a.setPermission("admin"),a.getPermission()}]}}).when("/admin/issues/:id/edit",{templateUrl:"views/admin/forms/issue-edit.html",controller:"IssueController",resolve:{permission:["SecFactory",function(a){return a.setPermission("admin"),a.getPermission()}]}}).when("/admin/issues/:id/:piece",{templateUrl:"views/admin/piece-preview.html",controller:"IssueController",resolve:{permission:["SecFactory",function(a){return a.setPermission("admin"),a.getPermission()}]}}).when("/admin/issues/:id/:piece/edit",{templateUrl:"views/admin/forms/piece-edit.html",controller:"IssueController",resolve:{permission:["SecFactory",function(a){return a.setPermission("admin"),a.getPermission()}]}}).when("/admin/pieces/create",{templateUrl:"views/admin/forms/piece-create.html",controller:"IssueController",resolve:{permission:["SecFactory",function(a){return a.setPermission("admin"),a.getPermission()}]}}).when("/admin/posts",{templateUrl:"views/admin/online-admin.html",controller:"PostController",resolve:{permission:["SecFactory",function(a){return a.setPermission("admin"),a.getPermission()}]}}).when("/admin/posts/create",{templateUrl:"views/admin/forms/post-create.html",controller:"PostController",resolve:{permission:["SecFactory",function(a){return a.setPermission("editor"),a.getPermission()}]}}).when("/admin/posts/:post/edit",{templateUrl:"views/admin/forms/post-edit.html",controller:"PostController",resolve:{permission:["SecFactory",function(a){return a.setPermission("editor"),a.getPermission()}]}}).when("/admin/users",{templateUrl:"views/admin/user-admin.html",controller:"UserController",resolve:{permission:["SecFactory",function(a){return a.setPermission("admin"),a.getPermission()}]}}).when("/admin/users/create",{templateUrl:"views/admin/forms/user-create.html",controller:"UserController",resolve:{permission:["SecFactory",function(a){return a.setPermission("admin"),a.getPermission()}]}}).when("/admin/users/:user/edit",{templateUrl:"views/admin/forms/user-edit.html",controller:"UserController",resolve:{permission:["SecFactory",function(a){return a.setPermission("admin"),a.getPermission()}]}}).when("/admin/images",{templateUrl:"views/admin/images-admin.html",controller:"ImageController",resolve:{permission:["SecFactory",function(a){return a.setPermission("admin"),a.getPermission()}]}})}]),angular.module("lematClient").config(["$routeProvider",function(a){a.when("/profile/",{templateUrl:"views/client/user-view.html",controller:"ProfileController",resolve:{permission:["SecFactory",function(a){return a.setPermission("contributor"),a.getPermission()}]}}).when("/profile/settings",{templateUrl:"views/client/forms/user-settings.html",controller:"ProfileController",resolve:{permission:["SecFactory",function(a){return a.setPermission("contributor"),a.getPermission()}]}}).when("/profile/:user/pieces",{templateUrl:"views/client/forms/pieces-list.html",controller:"ProfileController",resolve:{permission:["SecFactory",function(a){return a.setPermission("contributor"),a.getPermission()}]}}).when("/prfile/:user/pieces/:piece",{templateUrl:"views/client/forms/post-view.html",controller:"ProfileController",resolve:{permission:["SecFactory",function(a){return a.setPermission("contributor"),a.getPermission()}]}}).when("/profile/:user/posts/:post/edit",{templateUrl:"views/client/forms/post-edit.html",controller:"ProfileController",resolve:{permission:["SecFactory",function(a){return a.setPermission("contributor"),a.getPermission()}]}}).when("/profle/:user/posts/create",{templateUrl:"views/client/forms/post-create.html",controller:"ProfileController",resolve:{permission:["SecFactory",function(a){return a.setPermission("contributor"),a.getPermission()}]}})}]),angular.module("lematClient").config(["$routeProvider",function(a){a.when("/",{templateUrl:"views/core/main.html",controller:"EntryController"}).when("/issues/",{templateUrl:"views/core/issue-list.html",controller:"IssueController"}).when("/issue/:id",{templateUrl:"views/core/issue.html",controller:"IssueController"}).when("/entry/:entry",{templateUrl:"views/core/entry-view.html",controller:"EntryController"}).when("/issue/:id/:piece",{templateUrl:"views/core/piece-view.html",controller:"IssueController"}).when("/online",{templateUrl:"views/core/online.html",controller:"PostController"}).when("/online/:post",{templateUrl:"views/core/post-view.html",controller:"PostController"}).when("/user/:user",{templateUrl:"views/core/user-view.html",controller:"UserController"}).when("/submissions",{templateUrl:"views/core/submissions.html"}).when("/editors",{templateUrl:"views/core/editors.html",controller:"UserController"}).when("/about",{templateUrl:"views/core/about.html"}).when("/login",{templateUrl:"views/core/login.html"}).otherwise({redirectTo:"/"})}]),angular.module("lematClient").constant("ServerUrl","https://lematjournal.herokuapp.com"),angular.module("lematClient").controller("EntryController",["$scope","$rootScope","$route","$routeParams","$location","$document","AuthFactory","EntryFactory",function(a,b,c,d,e,f,g,h){a.url=e.absUrl(),a.entry={},a.identifier=d.id,a.getEntries=function(){h.getEntries(),a.entries=h.entries},a.getEntry=function(){h.getEntry(d.entry),a.entry=h.entry},a.upsertEntry=function(a){g.isAuthenticated()&&(h.upsertEntry(a),e.path("/entry-admin"),h.getEntries())},a.deleteIssue=function(a){g.isAuthenticated()&&(h.deletePost(a),e.path("/entry-admin"),h.getEntries())},a.pageChangeHandler=function(a){console.log("going to page "+a)},a.currentPage=1,a.$on("selectedUser",function(b,c){a.entry.user_id=c.id})}]),angular.module("lematClient").controller("ImageController",["$scope","$q","$routeParams","AuthFactory","AS3Factory","UserFactory",function(a,b,c,d,e,f){a.$watch(function(){return c.user},function(b){b&&(f.getUser(c.user),a.images=f.user.images)}),a.isAdmin=function(){return d.isAdmin()},a.getKeys=function(){var c=b.defer();return e.getAS3keys().then(function(){c.resolve(a.keys=e.keys)}),c.promise},a.getKeys(),a.deleteImage=function(b){e.deleteImage(b.id).then(function(c){a.deleteAS3Image(b.image_url),a.images.splice(g(b.id),1)})},a.deleteAS3Image=function(b){var c=new AWS.S3({region:"us-east-1",credentials:new AWS.Credentials(a.keys.access_key,a.keys.secret_key)});b=b.replace("https://lematjournal.s3.amazonaws.com/",""),console.log(b);var d={Bucket:"lematjournal",Key:b};c.deleteObject(d,function(a,b){a&&console.log(a,a.stack)})};var g=function(b){for(var c=0;c<a.images.length;c++)if(a.images[c].id===b)return c};a.getAS3Images=function(){var b=new AWS.S3({region:"us-east-1",credentials:new AWS.Credentials(a.keys.access_key,a.keys.secret_key)}),c={Bucket:"lematjournal",EncodingType:"url",MaxKeys:1e3,Prefix:"uploads"};b.listObjects(c,function(b,c){b?console.log(b,b.stack):(angular.forEach(c.Contents,function(b){a.images.push("https://lematjournal.s3.amazonaws.com/"+b.Key)}),a.images.splice(0,1))})},a.getAllImages=function(){a.getKeys().then(function(){e.getAS3Images().then(function(){a.images=e.images})})},a.pageChangeHandler=function(a){},a.currentPage=1}]),angular.module("lematClient").controller("IssueController",["$scope","$rootScope","$route","$routeParams","$location","$document","$http","$modal","AuthFactory","AS3Factory","IssueFactory",function(a,b,c,d,e,f,g,h,i,j,k){a.getIssues=function(){k.getIssues(),a.issues=k.issues},a.getIssue=function(){k.getIssue(d.id),a.issue=k.issue},a.getPieces=function(){k.getIssue(d.id),a.pieces=k.pieces},a.getPiece=function(){k.getIssuePiece(d.id,d.piece),a.piece=k.piece},a.upsertIssue=function(a){i.isAuthenticated()&&(k.upsertIssue(a),k.getIssues())},a.deleteIssue=function(a,b){i.isAuthenticated()&&k.deletePost(a,b)},a.upsertPiece=function(b){i.isAuthenticated()&&("/piece-create"===e.url()?k.upsertIssuePiece(b,b.issue_id).then(function(){e.path("/issue/"+d.id+"/edit"),a.getPieces()}):k.upsertIssuePiece(b,d.id).then(function(){a.getIssue(d.id),e.path("/issue/"+d.id+"/edit"),a.getPieces()}))},a.deletePiece=function(){i.isAuthenticated()&&(k.deleteIssuePiece(a.piece),e.path("issue/"+d.id),a.getIssue(d.id))},a.updatePieces=function(){angular.forEach(a.issue.pieces,function(b){a.upsertPiece(b)})},a.title="",a.scrollToTop=function(){f.scrollTopAnimated(0)},a.$watch(function(){return a.image},function(c){if(c){var d={imageUrl:c,userId:b.userId,issueId:a.issue.id};j.uploadImage(d).then(function(b){console.log(b),a.issue?a.issue.image=b:(a.issue={},a.issue.image=b)})}}),a.openUserModal=function(){a.$modalInstance=h.open({scope:a,templateUrl:"views/modals/user-create.html",controller:"UserController",size:"lg"})},a.$on("selectedUser",function(b,c){l(c.id)||(a.piece.users[a.piece.users.length]={username:c.username,email:c.email,id:c.id})}),a.removeUser=function(b){a.piece.users.splice(l(b),1)};var l=function(b){for(var c=0;c<a.piece.users.length;c++)if(a.piece.users[c].id===b)return a.piece.users[c]};a.exclude=function(a){return a.role.includes("contributor")}}]),angular.module("lematClient").controller("MainController",["$scope","$rootScope","$document","$location","$route","$routeParams","$http","AuthFactory",function(a,b,c,d,e,f,g,h){a.url=d.absUrl(),a.postCredentials=function(a){h.login(a).then(function(){b.session=h.setUser(),b.userId=h.session.id,d.path("/")}),toastr.success("Logged in","Done")},b.session=h.setUser(),b.userId=h.session.id,a.isAuthenticated=function(){return h.isAuthenticated()},a.getUserName=function(){b.userName=h.getUserName()},a.isAdmin=function(){return h.isAdmin()},a.logout=function(){h.logout(),b.session={}},a.$on("scroll",function(b,c){a.title=c}),a.$on("$locationChangeStart",function(){"/issue/:id"!==d.url()&&(a.title="")}),a.scrollShow=function(){return"/issue/1"===d.url()},a.isLoading=function(){return g.pendingRequests.length>0},a.filters={},a.setFilter=function(b){a.filters.tags=b,d.path("/online"),a.$emit("filter",a.filters)}}]),angular.module("lematClient").controller("PostController",["$scope","$location","$route","$routeParams","$modal","AuthFactory","UserFactory","PostFactory",function(a,b,c,d,e,f,g,h){a.url=b.absUrl(),a.post={},a.getPost=function(){h.getPost(d.post),a.post=h.post},a.getPosts=function(){h.getPosts(),a.posts=h.posts},a.resetPost=function(){angular.copy({},a.post)},a.getUsers=function(){g.getUsers(),a.users=g.users},a.upsertPost=function(a){f.isAuthenticated()&&h.upsertPost(a)},a.deletePost=function(a,b){f.isAuthenticated()&&h.deletePost(a,b)},a.open=function(){a.$modalInstance=e.open({scope:a,templateUrl:"views/admin/modals/user-create.html",controller:"UserController",size:"lg"})},a.ok=function(){a.$modalInstance.close()},a.cancel=function(){a.$modalInstance.dismiss("cancel")},a.$on("selectedUser",function(b,c){console.log(c),a.post.user_id=c.id}),a.$on("filter",function(c,d){a.filters=d,b.path("/online")}),a.getTags=function(){h.getTags(),a.tags=h.tags}}]),angular.module("lematClient").controller("UploadController",["$scope","$rootScope","$modal","$location","$q","$http","$timeout","$routeParams","AuthFactory","AS3Factory","UserFactory",function(a,b,c,d,e,f,g,h,i,j,k){a.file={},a.images=[],a.getUserImages=function(){a.getKeys(),k.getUser(h.user).then(function(){a.images=k.user.images})},a.getKeys=function(){var b=e.defer();return j.getAS3keys().then(function(){b.resolve(a.keys=j.keys)}),b.promise},a.uploadImage=function(){var b=new AWS.S3({region:"us-east-1",credentials:new AWS.Credentials(a.keys.access_key,a.keys.secret_key)});if(a.file){var c=Math.round(parseInt(a.file.size));if(c>a.sizeLimit)return toastr.error("Sorry, your attachment is too big. <br/> Maximum "+a.fileSizeLabel()+" file attachment allowed","File Too Large"),!1;var d=a.uniqueString()+"-"+a.file.name,e={Bucket:"lematjournal",Key:"uploads/"+d,ContentType:a.file.type,Body:a.file,ServerSideEncryption:"AES256"};b.putObject(e,function(b,c){if(b)return toastr.error(b.message,b.code),!1;toastr.success("File Uploaded Successfully","Done"),g(function(){a.uploadProgress=0,a.$digest()},4e3);var e="https://lematjournal.s3.amazonaws.com/uploads/"+d,f={imageUrl:e,userId:a.$parent.user.id};j.uploadImage(f).then(function(){k.getUser(h.user),a.$emit("profileImage",a.images[a.images.length-1].image_url)})}).on("httpUploadProgress",function(b){a.uploadProgress=Math.round(b.loaded/b.total*100),a.$digest()})}else toastr.error("Please select a file to upload")},a.uniqueString=function(){for(var a="",b="abcdefghijklmnopqrstuvwxyz0123456789",c=0;16>c;c++)a+=b.charAt(Math.floor(Math.random()*b.length));return a},a.uploadFile=function(b){return console.log(b),a.getKeys().then(function(){var c=new AWS.S3({region:"us-east-1",credentials:new AWS.Credentials(a.keys.access_key,a.keys.secret_key)});if(a.file){var d={Bucket:"lematjournal",Key:"uploads/"+b+a.file.name.replace(/\s/g,"-").toLowerCase(),ContentType:a.file.type,Body:a.file,ServerSideEncryption:"AES256"};c.putObject(d,function(a,b){return a?(toastr.error(a.message,a.code),!1):void toastr.success("File Uploaded Successfully","Done")})}else toastr.error("Please select a file to upload")}),"https://lematjournal.s3.amazonaws.com/uploads/"+b+a.file.name.replace(/\s/g,"-").toLowerCase()},a.fileSizeLabel=function(){return Math.round(a.sizeLimit/1024/1024)+"MB"},a.openImageManager=function(){a.$modalInstance=c.open({scope:a,controller:"ImageController",templateUrl:"views/admin/modals/image-manager.html",size:"lg"})}}]),angular.module("lematClient").controller("UserController",["$scope","$rootScope","$modal","$location","$route","$routeParams","AuthFactory","UserFactory","ProfileFactory",function(a,b,c,d,e,f,g,h,i){a.master={},a.getUsers=function(){h.getUsers(),a.users=h.users},a.getUser=function(){h.getUser(f.user).then(function(){a.user=h.user,angular.copy(a.user,a.master)})},a.upsertUser=function(a){g.isAuthenticated()&&h.upsertUser(a).then(function(){toastr.success("User updated successfully","Done")})},a.deleteUser=function(a,b){g.isAuthenticated()&&h.deleteUser(a,b)},a.resetUser=function(){a.user=a.master,toastr.info("User reset to last save","Done")},a.selectedUser=function(b){b&&a.$emit("selectedUser",b.originalObject)},a.$on("profileImage",function(b,c){a.setProfileImage(c)}),a.setProfileImage=function(b){a.user.profile_image=b,toastr.info("Profile Image Selected","Selected")},a.exclude=function(a){return!a.role.match(/^(admin|editor)$/)},a.open=function(){a.$modalInstance=c.open({scope:a,templateUrl:"views/admin/modals/image-upload.html",controller:"UploadController",windowClass:"app-modal-window",size:"lg"})},a.ok=function(){a.$modalInstance.close()},a.cancel=function(){a.$modalInstance.dismiss("cancel")},a.select=function(a){angular.element(a.target).hasClass("active")?angular.element(a.target).removeClass("active"):angular.element(a.target).addClass("active"),angular.element(a.target).siblings().removeClass("active")}}]),angular.module("lematClient").controller("ProfileController",["$scope","$rootScope","$modal","$location","$route","$routeParams","AuthFactory","UserFactory","ProfileFactory",function(a,b,c,d,e,f,g,h,i){a.master={},a.getUsers=function(){h.getUsers(),a.users=h.users},a.getProfile=function(){g.setUser().then(function(){b.session=g.session,i.getProfile(b.session).then(function(){a.user=i.profile,angular.copy(a.user,a.master)})})},a.upsertUser=function(b){g.isAuthenticated()&&!angular.equals(a.user,a.master)&&h.upsertUser(b).then(function(){toastr.success("User updated successfully","Done")})},a.resetUser=function(){a.user=a.master,toastr.info("User reset to last save","Done")},a.$on("profileImage",function(b,c){a.setProfileImage(c)}),a.setProfileImage=function(b){a.user.profile_image=b,toastr.info("Profile Image Selected","Selected")},a.open=function(){a.$modalInstance=c.open({scope:a,templateUrl:"views/client/modals/image-upload.html",controller:"UploadController",windowClass:"app-modal-window",size:"lg"})},a.ok=function(){a.$modalInstance.close()},a.cancel=function(){a.$modalInstance.dismiss("cancel")},a.fields={},a.save=function(b,c,d){a.fields[c]=!a.fields[c],a.upsertUser(d)},a.reset=function(b,c){27==b.keyCode&&a.userForm.$rollbackViewValue()}}]),angular.module("lematClient").directive("lematFooter",["UserFactory",function(a){return{restrict:"E",templateUrl:"views/core/partials/footer.html",scope:!1,link:function(b){a.getPostUsers(),b.postUsers=a.postUsers,a.getIssueUsers(),b.issueUsers=a.issueUsers}}}]),angular.module("lematClient").directive("lematHeader",[function(){return{restrict:"E",templateUrl:"views/core/partials/header.html",controller:"MainController",scope:!1}}]),angular.module("lematClient").directive("scrollPosition",["$document",function(a){return{scope:{scroll:"=scrollPosition"},link:function(b,c,d){var e=angular.element(a),f=function(){b.scroll=e.scrollTop()};e.on("scroll",b.$apply.bind(b,f)),f()}}}]),angular.module("lematClient").directive("lematRepeat",[function(){return function(a,b,c){angular.element(b),a.$last&&setTimeout(function(){a.$emit("lastElem")},1)}}]),angular.module("lematClient").directive("scroll",["$document",function(a){return{scope:!1,controller:"IssueController",link:function(b){var c=[];b.$on("lastElem",function(a){angular.forEach(b.issue.pieces,function(a){var b="#"+a.title_url.toString(),d=document.querySelector(b),e=d.getBoundingClientRect().top;c.push({title:a.title,pos:e})}),c.sort(function(a,b){return parseFloat(a.pos-b.pos)})});var d=0;a.on("scroll",function(){try{b.scroll<c[0].pos&&(b.title="")}catch(a){}try{b.scroll>c[d].pos&&b.scroll>c[0].pos&&(b.title=c[d].title)}catch(a){}try{b.scroll>c[d+1].pos&&d++}catch(a){}try{b.scroll<c[d].pos&&b.scroll>c[0].pos&&d--}catch(a){}b.$emit("scroll",b.title.toUpperCase())})}}}]),angular.module("lematClient").directive("lematLoading",["$http",function(a){return{restrict:"A",link:function(b,c){b.isLoading=function(){return a.pendingRequests.length>0},b.$watch(b.isLoading,function(a){a?c.show():c.hide()})}}}]),angular.module("lematClient").directive("file",function(){return{restrict:"AE",scope:{file:"@"},link:function(a,b,c){b.bind("change",function(b){var c=b.target.files,d=c[0];a.file=d,a.$parent.file=d,a.$apply()})}}}),angular.module("lematClient").directive("fileSelect",function(){return{restrict:"AE",require:"ngModel",scope:{folder:"="},controller:"UploadController",link:function(a,b,c,d){b.bind("change",function(b){var c=b.target.files,e=c[0];a.file=e;var f=a.uploadFile(a.folder);d.$setViewValue(f),a.$apply()})}}}),angular.module("lematClient").directive("uploadfile",function(){return{restrict:"A",link:function(a,b){b.bind("click",function(a){angular.element(a.target).siblings("#upload").trigger("click")})}}}),angular.module("lematClient").directive("ngEnter",function(){return function(a,b,c){b.bind("keydown keypress",function(b){13===b.which&&(a.$apply(function(){a.$eval(c.ngEnter)}),b.preventDefault())})}}),angular.module("lematClient").directive("ngEsc",function(){return function(a,b,c){b.bind("keydown keypress",function(b){27===b.which&&(a.$apply(function(){a.$eval(c.ngEsc)}),b.preventDefault())})}}),angular.module("lematClient").factory("IssueFactory",["$http","$window","AuthFactory","ServerUrl",function(a,b,c,d){var e=[],f={},g=[],h={},i=function(){angular.copy({},f)},j=function(){return a.get(d+"/issues/").then(function(a){angular.copy(a.data,e)})},k=function(b){return a.get(d+"/issues/"+b).then(function(a){angular.copy(a.data,f),console.log(f)})},l=function(b){var c={issue:{title:b.title,image:b.image,download_link:b.downloadLink}};return b.id?a.patch(d+"/issues/"+b.id,c).then(function(a){k(a.data.id)},function(a){console.log(a)}):a.post(d+"/issues/",c).then(function(a){e.push(a.data)},function(a){console.log("response: ",a)})},m=function(b,c){return a["delete"](d+"/issues/"+c).then(function(){e.splice(n(b),1)})},n=function(a){for(var b=0;b<f.length;b++)if(e[b].id===a)return b},o=function(b){return a.get(d+"/issues/"+b+"/pieces").then(function(a){angular.copy(a.data,g)})},p=function(b,c){return a.get(d+"/issues/"+b+"/pieces/"+c).then(function(a){angular.copy(a.data,h)})},q=function(b,c){var e=[];b.users&&b.users.map(function(a){console.log(a),e.push(a.id)}),console.log(e);var f={piece:{title:b.title,content:b.content,piece_type:b.piece_type,user_ids:e,issue_id:b.issue_id,order:b.order,title_url:b.title.replace(/\s/g,"-").substring(0,25).toLowerCase()}};return b.id?a.patch(d+"/issues/"+c+"/pieces/"+b.id,f).then(function(a){g.push(a.data)},function(a){console.log(a)}):a.post(d+"/issues/"+c+"/pieces/",f).then(function(){},function(a){console.log("error: ",a)})},r=function(b){return console.log(b),a["delete"](d+"/issues/"+b.issue_id+"/pieces/"+b.title)};return{getIssues:j,getIssue:k,getIssuePieces:o,getIssuePiece:p,issues:e,issue:f,pieces:g,piece:h,upsertIssue:l,deleteIssue:m,resetIssue:i,upsertIssuePiece:q,deleteIssuePiece:r}}]),angular.module("lematClient").factory("AuthFactory",["$http","$q","$window","ServerUrl",function(a,b,c,d){var e={},f=function(b){return a.post(d+"/users/login",b).then(function(a){a.id;m(a)})},g=function(){return a.post(d+"/users/logout").then(function(){c.localStorage.removeItem("lemat-user");console.log("logged out")})},h=function(b){var c={user:{email:b.email,password:b.password}};return a.post(d+"/posts/users/",c).then(function(a){m(a)},function(a){console.log(a)})},i=function(){var a=JSON.parse(c.localStorage.getItem("lemat-user"));return a?!0:!1},j=function(){if(c.localStorage.getItem("lemat-user")){var a=JSON.parse(c.localStorage.getItem("lemat-user"));return"admin"===a.data.role?!0:!1}},k=function(){var a=JSON.parse(c.localStorage.getItem("lemat-user"));return a.data.role},l=function(){var a=b.defer();if(c.localStorage.getItem("lemat-user")){var d=JSON.parse(c.localStorage.getItem("lemat-user")),d={id:d.data.id,email:d.data.email,username:d.data.username,role:d.data.role};a.resolve(angular.copy(d,e))}return a.promise},m=function(b){c.localStorage.setItem("lemat-user",JSON.stringify(b)),(b.data.role="admin")&&(a.defaults.headers.common.Authorization="Token token="+b.data.token,console.log(b.data.token))};return{login:f,logout:g,register:h,isAuthenticated:i,isAdmin:j,getUserRole:k,setUser:l,session:e}}]),angular.module("lematClient").factory("PostFactory",["$http","AuthFactory","ServerUrl",function(a,b,c){var d=[],e={},f=[],g=function(){angular.copy({},e)},h=function(){return a.get(c+"/posts/").then(function(a){angular.copy(a.data,d)})},i=function(b){return a.get(c+"/posts/"+b).then(function(a){angular.copy(a.data,e),console.log(e)})},j=function(){return a.get(c+"/tags/").then(function(a){angular.copy(a.data,f)})},k=function(b){var d={post:{title:b.title,tag_names:b.tags,user_id:b.user_id,content:b.content,title_url:b.title.replace(/\s/g,"-").substring(0,25).toLowerCase()}};return console.log(d),b.id?a.patch(c+"/posts/"+b.id,d).then(function(a){console.log(a)}):a.post(c+"/posts/",d).then(function(a){console.log(a)})},l=function(a){for(var b=0;b<d.length;b++)if(d[b].id===a)return b},m=function(b,e){return a["delete"](c+"/posts/"+e).then(function(){d.splice(l(b),1)})};return{getPosts:h,getPost:i,getTags:j,posts:d,post:e,tags:f,upsertPost:k,deletePost:m,resetPost:g}}]),angular.module("lematClient").factory("EntryFactory",["$http","$window","AuthFactory","ServerUrl",function(a,b,c,d){var e={},f=[],g=function(){return a.get(d+"/entries/").then(function(a){angular.copy(a.data,f)})},h=function(b){return a.get(d+"/entries/"+b).then(function(a){angular.copy(a.data,e)})},i=function(b){console.log(b);var c={entry:{title:b.title,content:b.content,user_id:b.user_id}};return b.id?a.patch(d+"/entries/"+b.id,c).then(function(a){console.log("response: ",a),h(a.data.id)},function(a){console.log(a)}):a.post(d+"/entries/",c).then(function(a){console.log("response: ",a),h(a.data.id)},function(a){console.log("response: ",a)})},j=function(b){return a["delete"](d+"/entries/"+b).then(function(){f.splice(k(b),1)})},k=function(a){for(var b=0;b<e.length;b++)if(e[b].id===a)return b};return{getEntries:g,getEntry:h,upsertEntry:i,deleteEntry:j,entry:e,entries:f}}]),angular.module("lematClient").factory("UserFactory",["$http","AuthFactory","ServerUrl",function(a,b,c){var d=[],e={},f=[],g=[],h=function(b){return a.get(c+"/users/"+b).then(function(a){var b={id:a.data.id,email:a.data.email,bio:a.data.bio,username:a.data.username,role:a.data.role,images:a.data.images,pieces:a.data.pieces,posts:a.data.posts,entries:a.data.entries,profile_image:a.data.profile_image};angular.copy(b,e)})},i=function(){return a.get(c+"/users/").then(function(a){angular.copy(a.data,d)})},j=function(){return a.get(c+"/users/post-users").then(function(a){angular.copy(a.data,f)})},k=function(){return a.get(c+"/users/issue-users").then(function(a){angular.copy(a.data,g)})},l=function(b){var e={user:{email:b.email,username:b.username.replace(/[^\w\s]/gi,""),role:b.role,bio:b.bio,password:b.password,profile_image:b.profile_image}};return b.id?a.patch(c+"/users/"+b.id,e).then(function(a){angular.copy(a.data,b),d.push(a.data),i()}):a.post(c+"/users/",e).then(function(a){angular.copy(a.data,b),d.push(a.data),i()})},m=function(a){for(var b=0;b<d.length;b++)if(d[b].id===a)return b},n=function(b,e){return a["delete"](c+"/users/"+e).then(function(){d.splice(m(b),1)})};return{getUser:h,getUsers:i,getPostUsers:j,getIssueUsers:k,upsertUser:l,deleteUser:n,user:e,users:d,postUsers:f,issueUsers:g}}]),angular.module("lematClient").factory("AS3Factory",["$http","ServerUrl",function(a,b){var c={},d=[],e={},f=function(){return a.get(b+"/amazon/sign_key").then(function(a){angular.copy(a.data,c)})},g=function(){return a.get(b+"/images/").then(function(a){angular.copy(a.data,d)})},h=function(c){return a["delete"](b+"/images/"+c).then(function(){})},i=function(c){var d={image:{image_url:c.imageUrl,issue_id:c.issueId,user_id:c.userId}};return a.post(b+"/images/",d).then(function(a){angular.copy(a.data,c)},function(a){console.log("error: ",a)})};return{getAS3keys:f,getAS3Images:g,uploadImage:i,deleteImage:h,images:d,image:e,keys:c}}]),angular.module("lematClient").factory("SecFactory",["$resource","$q","$rootScope","$location","AuthFactory",function(a,b,c,d,e){var f={admin:3,editor:2,author:1,contributor:1,user:0},g={},h={},i=function(){var a=e.getUserRole();return"admin"===a?g=3:"editor"===a?g=2:"author"===a?g=1:"contributor"===a?g=1:"user"===a&&(g=0),g},j=function(a){"admin"===a?this.role=f.admin:"editor"===a?this.role=f.editor:"author"===a?this.role=f.author:"contributor"===a?this.role=f.contributor:this.role=f.user};j.prototype.getLevel=function(){return this.role};var k=function(a){h=new j(a)},l=function(){var a=!1;a=i()>=h.getLevel()?!0:!1,a||d.path("/")};return{roles:f,clearance:g,setPermission:k,permission:h,permissionLevel:j,permissionCheck:i,getPermission:l}}]),angular.module("lematClient").factory("ProfileFactory",["$http","ServerUrl",function(a,b){var c={},d=function(d){return a.get(b+"/profile/"+d.id).then(function(a){angular.copy(a.data,c)})};return{getProfile:d,profile:c}}]),angular.module("lematClient").filter("to_trusted",["$sce",function(a){return function(b){return a.trustAsHtml(b)}}]),angular.module("lematClient").filter("escapeHtml",function(){var a={"&":"&amp;","<":"&lt;",">":"&gt;",'"':"&quot;","'":"&#39;","/":"&#x2F;"};return function(b){return String(b).replace(/[&<>"'\/]/g,function(b){return a[b]})}}),angular.module("lematClient").filter("spaceless",function(){return function(a){return a?a.replace(/[()&<>"'\/]/g,"").replace(/\s+/g,"-"):void 0}}),angular.module("lematClient").filter("cut",function(){return function(a,b,c,d){if(!a)return"";if(c=parseInt(c,10),!c)return a;if(a.length<=c)return a;if(a=a.substr(0,c),b){var e=a.lastIndexOf(" ");-1!==e&&(a=a.substr(0,e))}return a+(d||"…")}}),function(){angular.module("bootstrapColumnsSameHeight",[]).directive("sameHeight",["$window",function(a){var b=function(a){var b=0;angular.forEach(a,function(a){a.style.minHeight="0px",a.offsetHeight>b&&(b=a.offsetHeight)}),angular.forEach(a,function(a){a.style.minHeight=b+"px"})},c=function(a){var b=a.children(),c=[],d=function(a){var b=/col-xs-([0-9]{1,2})/.exec(a);return b?parseInt(b[1],10):0},e=function(a){var b=/col-sm-([0-9]{1,2})/.exec(a);return b?parseInt(b[1],10):d(a)},f=function(a){var b=/col-md-([0-9]{1,2})/.exec(a);return b?parseInt(b[1],10):e(a)},g=function(a){var b=/col-lg-([0-9]{1,2})/.exec(a);return b?parseInt(b[1],10):f(a)};return angular.forEach(b,function(a){var b=angular.element(a).attr("class");c.push({xs:d(b),sm:e(b),md:f(b),lg:g(b)})}),c},d=function(){return a.innerWidth<768?"xs":a.innerWidth>=768&&a.innerWidth<992?"sm":a.innerWidth>=992&&a.innerWidth<1200?"md":"lg"},e=function(a){var e=c(a),f=a.children(),g=[],h=0,i=[];angular.forEach(e,function(a,b){h+a[d()]<=12?(i.push(f[b]),h+=a[d()]):(g.push(i),i=[],i.push(f[b]),h=a[d()])}),i.length>0&&g.push(i),angular.forEach(g,function(a){b(a)})};return{restrict:"EA",link:function(b,c){e(c),angular.element(a).bind("resize",function(){e(c)})}}}])}(),angular.module("lematClient").run(["$templateCache",function(a){a.put("views/admin/control-panel.html",'<div class="container"> <ul> <li><a href="#!/admin/posts"><h3>Posts</h3></a></li> <li><a href="#!/admin/users"><h3>Users</h3></a></li> <li><a href="#!/admin/entries"><h3>News</h3></a></li> <li><a href="#!/admin/issues"><h3>Issues and Pieces</h3></a></li> <li><a href="#!/admin/images"><h3>Images</h3></a></li> </ul> </div>'),a.put("views/admin/entry-admin.html",'<div class="container" ng-init="getEntries()"> <table class="table"> <tr> <th>title</th> <th>author</th> <th>options</th> </tr> <tr ng-repeat="entry in entries"> <th>{{ ::entry.title }}</th> <th>{{ ::entry.user.username }}</th> <th> <a class="btn btn-default" href="#!/admin/entries/{{ ::entry.title_url }}/edit">Edit</a> </th> </tr> </table> <a class="btn btn-default" href="#!/entry-create">Add Entry</a> </div>'),a.put("views/admin/images-admin.html",'<div class="container" ng-init="getAllImages()"> <div class="row"> <div dir-paginate="image in images | itemsPerPage: 8" current-page="currentPage"> <div class="col-xs-3"> <div class="profile-image"> <img ng-src="{{ image.image_url }}" height="255" width="255"> </div> <div class="description"> owner: {{ image.user }} </div> </div> </div> </div> <div class="row"> <ul class="pager"> <dir-pagination-controls template-url="views/core/partials/pagination.html"></dir-pagination-controls> </ul> </div> </div>'),a.put("views/admin/issue-admin.html",'<div class="container" ng-init="getIssues()"> <div class="row" ng-repeat="issue in issues"> <h2><a href="#!/admin/issues/{{ ::issue.id }}/edit">{{ ::issue.title }}</a></h2> <h3>created: {{ ::issue.created_at }}</h3> </div> <hr> <div class="row"> <h1>Add Issue:</h1> <div class="form-group"> <label for="name">Title</label> <input type="text" ng-model="issue.title" id="title" class="form-control" placeholder="title" required> </div> <div class="form-group"> <label for="download">Download Link</label> <input id="upload" type="file" name="pdf" class="upload" style="display: none" file-select folder="\'issues/\'" accept=".pdf" ng-model="issue.downloadLink"> <button type="button" uploadfile class="btn btn-default btn-block">Select pdf to upload</button> </div> <!--\n      <div class="form-group">\n         <label for="image">Cover Image</label>\n         <input id="upload" type="file" name="cover" class="upload" style="display: none" file-select folder="\'cover/\'" accept="image/*" ng-model="image" />\n         <button type="button" uploadfile class="btn btn-default btn-block">Select Image to upload</button>\n      </div>\n--> <a class="btn btn-default" ng-click="upsertIssue(issue)">Submit</a> </div> </div>'),
a.put("views/admin/online-admin.html",'<div class="container" ng-init="getPosts()"> <table class="table"> <tr> <th>title</th> <th>author</th> <th>options</th> </tr> <tr ng-repeat="post in posts"> <th>{{ ::post.title }}</th> <th>{{ ::post.author }}</th> <th><a class="btn btn-default" href="#!/admin/posts/{{ ::post.title_url }}/edit">Edit</a></th> </tr> </table> <a class="btn btn-default" href="#!/admin/posts/create">Add Post</a> </div>'),a.put("views/admin/piece-preview.html",'<div class="container" ng-init="getPiece()"> <div class="content"> <h4 class="title text-center">{{ ::piece.title }}</h4> <p class="text-center"><font ng-repeat="user in piece.users"><span ng-show="!$first && !$last">, </span><span ng-show="!$first && $last"> and </span>{{ ::user.username }}</font></p> <br> <p ng-bind-html="piece.content | to_trusted"></p> </div> </div>'),a.put("views/admin/user-admin.html",'<div class="container" ng-init="getUsers()"> <table class="table"> <tr> <th>user</th> <th>name</th> <th>role</th> <th>options</th> </tr> <tr ng-repeat="user in users"> <th>{{ ::user.email }}</th> <th>{{ ::user.username }}</th> <th>{{ ::user.role }}</th> <th><a class="btn btn-default" href="#!/admin/users/{{ ::user.username }}/edit">Edit</a></th> </tr> </table> <a class="btn btn-default" href="#!/user-create">Add User</a> </div>'),a.put("views/client/piece-view.html",'<div class="container" ng-init="getPiece()"> <div class="content"> <h4 class="title text-center">{{ ::piece.title }}</h4> <p class="text-center"><font ng-repeat="user in piece.users"><span ng-show="!$first && !$last">, </span><span ng-show="$last && !$first"> and </span>{{ ::user.username }}</font></p> <br> <p ng-bind-html="piece.content | to_trusted"></p> </div> </div>'),a.put("views/client/post-view.html",'<div class="container"> <div class="row" ng-init="getPost()"> <h4 class="title text-center">{{ post.title }}</h4> <p class="text-center">{{ post.author }} - {{ post.created_at | date: \'medium\' }}</p> <hr> <p>{{ post.description }}</p> <p ng-bind-html="post.content | to_trusted"></p> <hr> <a class="btn btn-default" ng-href="/#!/online">Back</a> <a class="btn btn-default" social-twitter custom-url="{{ url }}"><span class="fa fa-twitter"></span></a> <dir-disqus disqus-shortname="lematjournal" disqus-identifier="{{ identifier }}" disqus-url="{{ url }}" disqus-title="{{ post.title }}"> </dir-disqus> </div> </div>'),a.put("views/client/user-view.html",'<div class="container" ng-init="getProfile()"> <form name="userForm"> <div class="row"> <h3 class="title text-center"><a ng-click="fields.editName = !fields.editName" ng-show="!fields.editName">{{ user.username }}</a></h3> <h3><input type="text" name="editName" class="title text-center" ng-model="user.username" style="width: 100%" ng-keyup="reset($event, field)" ng-show="fields.editName" ng-enter="save($event, \'editName\', user)"></h3> <hr> <a ng-click="open()" tooltip="click to change"><img class="img-responsive center-block" src="{{ user.profile_image }}"></a> <br> </div> <div class="row"> <a ng-click="fields.editBio = !fields.editBio"><h4 class="title text-center">BIO</h4> <p class="text-center" ng-hide="fields.editBio" ng-show="!fields.editBio">{{ user.bio }}</p></a> <input type="text" name="userBio" ng-model="user.bio" ng-keyup="reset($event, field)" ng-if="fields.editBio" class="form-control" ng-enter="save($event, \'editBio\', user)"> <i ng-if="editBio">* press \'esc\' to reset field</i> </div> </form> <div class="row" ng-if="user.pieces.length > 0"> <h4 class="title text-center">ISSUE PIECES</h4> <div ng-repeat="piece in user.pieces"> <p class="text-center"><a href="#!/issue/{{ piece.issue_id }}/{{ piece.title_url }}">{{ piece.title | uppercase }}</a> </p> </div> </div> <div class="row" ng-if="user.posts.length > 0"> <h4 class="title text-center">ARTWORK/ONLINE CONTENT</h4> <div ng-repeat="post in user.posts"> <p class="text-center"><a href="#!/online/{{ post.title_url }}">{{ post.title | uppercase }}</a> </p> </div> </div> <div class="row" ng-if="user.entries.length > 0"> <h4 class="title text-center">NEWS ENTRIES</h4> <div ng-repeat="entry in user.entries"> <p class="text-center"><a href="#!/entry/{{ entry.title_url }}">{{ entry.title | uppercase }}</a> </p> </div> </div> </div>'),a.put("views/core/about.html",'<div class="container"> <h1 class="text-center title">LE MAT POST-JOKE NON-MANIFESTO</h1> <hr> <p style="line-height: 200%; font-size: 16px">Le Mat is a non-philosophical enterprise that programmatically exploits its own ignorance in the name of annihilating—aesthetically and discursively—the “subject of science” or a “subject supposed to know” which has haunted philosophical and artistic discourse. Le Mat decisively locates itself as the obverse of this subject; by making it speak it deploys an unconscious strategy of subverting or exiting their (philosophy and art’s) linear dialectics of negation/deconstruction as a wager that, by knowing nothing at all, it situates itself in the position of truth. Thus, it engages a dehiscent discourse emerging in the real or recognized absence of this subject of science—a situation which authorizes—proscribes the generative program/analytic practice of dialectically anticipating, reproducing, and directing the negativizing effects of this absence as a strategy of anti-pedagogical and anti-humanist dissemination of a “problem set” or a “program of research” informed our elected discursive procedures in the domains of psychoanalysis, aesthetics, politics, etc.</p> <br> <p style="line-height: 200%; font-size: 16px">Thus, Le Mat is a [de]regulated cybernetics of the discursive effects of ignorance, a playful Jacobinism-Reagonomics (Reacobinism) in the political economy of philosophy which simultaneously decenters as it aggregates the remnants of the philosophical state’s [logo]centralized humanist discursive apparatus—undoing and exposing philosophy’s various decisions and deploying it in the name of our aesthetic and political practices—heretofore parasitized for philosophy’s own purposes (namely, to validate and exercise the Principle of Sufficient Philosophy) and used to scaffold its degenerating program of research.</p> <br> <p style="line-height: 200%; font-size: 16px">In a word, Le Mat makes extensive use of Evil (reflexivity, infinite exchangeability, spiraling negativity, undecidability, undeconstructability, etc.) as a part of its philosophical conspiracy to establish localized hallucinogenic epistemologies, agitate, or produce “revolutionary flows” by engaging a set of philosophical reciprocally redefined pragmatics (Lacauzian, Delecanian, Dergelian, and Herridian) as the groundwork for an as-yet-unknown and nonspecific democratic/democratizing project.</p> <p style="font-size: 16px" class="pull-right">- The Editors</p> </div>'),a.put("views/core/editors.html",'<div class="container" ng-init="getUsers()"> <div class="row" ng-repeat="user in users | omit: exclude"> <div> <div class="row"> <h3 class="title text-center">{{ ::user.username }}</h3> <hr> <img class="img-responsive center-block" src="{{ ::user.profile_image }}"> <br> </div> <div class="row" ng-if="user.pieces.length > 0"> <h4 class="title text-center">ISSUE PIECES</h4> <div ng-repeat="piece in user.pieces"> <p class="text-center"><a href="#!/issue/{{ ::piece.issue_id }}/{{ ::piece.title_url }}">{{ piece.title | uppercase }}</a> </p> </div> </div> <div class="row" ng-if="user.posts.length > 0"> <h4 class="title text-center">ARTWORK/ONLINE CONTENT</h4> <div ng-repeat="post in user.posts"> <p class="text-center"><a href="#!/online/{{ ::post.title_url }}">{{ ::post.title | uppercase }}</a> </p> </div> </div> <div class="row" ng-if="user.entries.length > 0"> <h4 class="title text-center">NEWS ENTRIES</h4> <div ng-repeat="entry in user.entries"> <p class="text-center"><a href="#!/entry/{{ ::entry.id }}">{{ ::entry.title | uppercase }}</a> </p> </div> </div> </div> </div> </div>'),a.put("views/core/entry-view.html",'<div class="container" ng-init="getEntry()"> <div class="row"> <h1 class="news-entry">{{ entry.title }}</h1> <hr> <p class="post-meta">Posted by <a ng-href="#!/user/{{ entry.user.username }}"> {{ entry.user.email }}</a> on {{ entry.created_at | date:\'medium\' }}</p> <p ng-bind-html="entry.content | to_trusted"></p> <p class="pull-right">- {{ entry.user.email }}</p> </div> <hr> <div class="row"> <a class="btn btn-default" ng-href="/#!/">Back</a> <a class="btn btn-default" social-twitter custom-url="{{ ::url }}"><span class="fa fa-twitter"></span></a> <a class="btn btn-default" href="https://www.tumblr.com/share" data-post-type="text" data-title="{{ entry.title }}" data-content="{{ entry.content }}" data-show-via="lematjournal.org"><span class="fa fa-tumblr"></span></a> <dir-disqus disqus-shortname="lematjournal" disqus-identifier="{{ identifier }}" disqus-url="{{ url }}" disqus-title="{{ entry.title }}"> </dir-disqus> </div> </div>'),a.put("views/core/issue-list.html",'<div class="container" ng-init="getIssues()"> <div class="content" ng-repeat="issue in issues"> <div class="content-inner"> <h2><a href="#!/issue/{{ ::issue.id }}">{{ ::issue.title | uppercase }}:</a></h2> <h2><a href="#!/issue/{{ ::issue.id }}"><img ng-src="{{ ::issue.image.image_url }}"></a> </h2> </div> <div class="content-inner"> <h3>CONTENTS:</h3> <hr> <div class="content-inner" ng-repeat="piece in issue.pieces | orderBy: \'order\'"> <li><a href="#!/issue/{{ ::issue.id }}/{{ ::piece.title_url }}"><h4>{{ ::piece.title }} - <font ng-repeat="user in piece.users"><span ng-show="!$first && !$last">, </span><span ng-show="$last && !$first"> and </span>{{ ::user.username }}</font></h4></a>  </li> </div> </div> <br> <div class="content-inner" ng-if="issue.link"> <h3>DOWNLOAD ISSUE: <a href="{{ ::issue.link }}"></a></h3> <hr> </div> </div> <br> </div>'),a.put("views/core/issue.html",'<div class="container" id="contents" ng-init="getIssue()" scroll> <div class="row"> <div class="col-md-4"> <h2>WRITTEN</h2> <ul ng-repeat="piece in issue.pieces | orderBy: \'order\' | filter: { piece_type: \'!Picture\' }"> <li><a href="#{{ ::piece.title_url }}" du-smooth-scroll>{{ ::piece.title }}</a> </li> </ul> </div> <div class="col-md-4"> <h2>PICTURED</h2> <ul ng-repeat="piece in issue.pieces | filter: { piece_type: \'Picture\'}"> <li><a href="#{{ ::piece.title_url }}" du-smooth-scroll>{{ ::piece.title }}</a></li> </ul> </div> <div class="col-md-4"> <h2>CONTRIBUTORS</h2> <ul ng-repeat="piece in issue.pieces | unique:\'users\' | orderBy: \'order\'" author> <li><font ng-repeat="user in piece.users | reverse"><span ng-show="!$first && !$last">, </span><span ng-show="$last && !$first"> and </span><a href="#!/user/{{ ::user.username }}">{{ ::user.username }}</a></font></li> </ul> </div> </div> <div class="row"> <div ng-repeat="piece in issue.pieces | orderBy: \'order\' | filter: author.name" lemat-repeat> <div class="content" id="{{ ::piece.title_url }}"> <h4 class="title text-center">{{ ::piece.title }}</h4> <p class="text-center"><font ng-repeat="user in piece.users"><span ng-show="!$first && !$last">, </span><span ng-show="$last && !$first"> and </span><a href="#!/user/{{ ::user.username }}">{{ ::user.username }}</a></font></p> <br> <p ng-bind-html="piece.content | to_trusted"></p> </div> </div> </div> </div>'),a.put("views/core/login.html",'<div class="container"> <form name="loginForm" novalidate> <div class="form-group"> <label for="email">Email address</label> <input type="email" class="form-control" id="email" placeholder="Enter email" ng-model="credentials.email" required> </div> <div class="form-group"> <label for="password">Password</label> <input type="password" class="form-control" id="password" placeholder="Password" ng-model="credentials.password" required> </div> <button class="btn" value="Login" ng-click="postCredentials(credentials)">Submit</button> </form> <br> </div>'),a.put("views/core/main.html",'<div class="container" ng-init="getEntries()"> <div dir-paginate="entry in entries | itemsPerPage: 5 | orderBy: \'-created_at\'" current-page="currentPage"> <a ng-href="#!/entry/{{ ::entry.title_url }}"> <h1 class="news-entry">{{ ::entry.title | uppercase }}</h1> </a> <hr> <p class="post-meta">Posted by <a ng-href="#!/user/{{ ::entry.user.username }}"> {{ ::entry.user.email }}</a> on {{ ::entry.created_at | date:\'medium\' }} <span class="disqus-comment-count" data-disqus-url="{{ ::url }}entry/{{ ::entry.title_url }}"></span> </p> <br> <p class="post-subtitle" ng-bind-html="entry.content | to_trusted"></p> </div> <br> <ul class="pager"> <dir-pagination-controls template-url="views/core/partials/pagination.html"></dir-pagination-controls> </ul> </div> <script type="text/javascript">/* * * CONFIGURATION VARIABLES: EDIT BEFORE PASTING INTO YOUR WEBPAGE * * */\n   var disqus_shortname = \'lematjournal\'; // required: replace example with your forum shortname\n\n   /* * * DON\'T EDIT BELOW THIS LINE * * */\n   (function () {\n      var s = document.createElement(\'script\');\n      s.async = true;\n      s.type = \'text/javascript\';\n'+"      s.src = '//' + disqus_shortname + '.disqus.com/count.js';\n      (document.getElementsByTagName('HEAD')[0] || document.getElementsByTagName('BODY')[0]).appendChild(s);\n   }());</script>"),a.put("views/core/online.html",'<div class="container"> <header class="contrast-bar"> <h3 class="section-title"><a ng-click="setFilter()">all</a> // <a ng-click="setFilter(\'art\')">art</a> // <a ng-click="setFilter(\'essay\')"> essays</a> // <a ng-click="setFilter(\'poetry\')">poetry</a> // search: <input type="text" style="width: 200px" ng-model="filters.tags"></h3> </header> <hr> <div same-height class="row" ng-init="getPosts()"> <div class="col-md-4" ng-repeat="post in posts | filter:filters"> <div class="panel panel-default"> <div class="panel-heading"><a style="text-transform: uppercase" href="/#!/online/{{ ::post.title_url }}">{{ ::post.title }}</a> <p> - {{ ::post.author }}</p> </div> <div class="panel-body"><p>tags: <font ng-repeat="tag in post.tags"><span ng-show="!$first">, </span><a ng-click="setFilter(tag)">#{{ ::tag | uppercase }}</a></font></p></div> </div> </div> </div></div>'),a.put("views/core/piece-view.html",'<div class="container" ng-init="getPiece()"> <div class="content"> <h4 class="title text-center">{{ ::piece.title }}</h4> <p class="text-center"><font ng-repeat="user in piece.users"><span ng-show="!$first && !$last">, </span><span ng-show="$last && !$first"> and </span>{{ ::user.username }}</font></p> <br> <p ng-bind-html="piece.content | to_trusted"></p> </div> </div>'),a.put("views/core/post-view.html",'<div class="container"> <div class="row" ng-init="getPost()"> <h4 class="title text-center">{{ post.title }}</h4> <p class="text-center">{{ post.author }} - {{ post.created_at | date: \'medium\' }}</p> <hr> <p>{{ post.description }}</p> <p ng-bind-html="post.content | to_trusted"></p> <hr> <a class="btn btn-default" ng-href="/#!/online">Back</a> <a class="btn btn-default" social-twitter custom-url="{{ url }}"><span class="fa fa-twitter"></span></a> <dir-disqus disqus-shortname="lematjournal" disqus-identifier="{{ identifier }}" disqus-url="{{ url }}" disqus-title="{{ post.title }}"> </dir-disqus> </div> </div>'),a.put("views/core/submissions.html",'<div class="container"> <h1 class="text-center title">LE MAT SUBMISSION GUIDELINES</h1> <hr> <p class="lead"><i>Note: open to revision</i></p> <li class="lead">Send submissions to lematjournal@gmail.com</li> <li class="lead">For visual art submit 2 to 3 images. If you are submitting photo-documentation or digital photography we will accept any size or file type of at least 300dpi; final proportions are to be determined by the editors and printing/cost constraints. We accept all species of photography. All submissions should be captioned in the following format: <br> <br> <i class="lead">Artist, title, date, medium, and dimensions are separated by commas, and these elements are followed by a period. Collection, city, and credit lines follow, separated by commas. After this, in parentheses, come all copyright and photograph credit lines. There is no terminal period, unless the basic caption information is followed by a descriptive sentence, which occurs rarely. Complete information on medium, dimensions, and collection should be provided if possible.</i> </li> <br> <li class="lead">3 to 5 poems of any length. Include a short author biography. Feel free to destroy your personality.</li> <li class="lead">Short stories and experimental fiction of 1000 to 3000 words.</li> <li class="lead">Critical works (art criticism, philosophy, literary theory/analysis, art history, knickknacks) of 1000 to 3000 words. Please use MLA format for footnoting, etc.</li> </div>'),a.put("views/core/user-view.html",'<div class="container" ng-init="getUser()"> <div class="row"> <h3 class="title text-center">{{ user.username }}</h3> <hr> <img class="img-responsive center-block" src="{{ user.profile_image }}"> <br> </div> <div class="row" ng-if="user.bio"> <h4 class="title text-center">BIO</h4> <p class="text-center">{{ user.bio }}</p> </div> <div class="row" ng-if="user.pieces.length > 0"> <h4 class="title text-center">ISSUE PIECES</h4> <div ng-repeat="piece in user.pieces"> <p class="text-center"><a href="#!/issue/{{ piece.issue_id }}/{{ piece.title_url }}">{{ piece.title | uppercase }}</a> </p> </div> </div> <div class="row" ng-if="user.posts.length > 0"> <h4 class="title text-center">ARTWORK/ONLINE CONTENT</h4> <div ng-repeat="post in user.posts"> <p class="text-center"><a href="#!/online/{{ post.title_url }}">{{ post.title | uppercase }}</a> </p> </div> </div> <div class="row" ng-if="user.entries.length > 0"> <h4 class="title text-center">NEWS ENTRIES</h4> <div ng-repeat="entry in user.entries"> <p class="text-center"><a href="#!/entry/{{ entry.title_url }}">{{ entry.title | uppercase }}</a> </p> </div> </div> </div>')}]);